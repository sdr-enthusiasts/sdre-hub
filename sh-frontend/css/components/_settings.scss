// Copyright (C) 2024 Fred Clausen
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.

@use "../config/colors";
@use "../config/config";
@use "../mixins/border" as b;

@mixin settings_small() {
  flex-direction: column;

  & > *:first-child {
    width: 100%;
  }

  & > *:nth-child(2) {
    width: 100%;
  }

  & > *:only-child {
    width: 100%;
  }
}

.settings {
  display: flex;
  flex-direction: column;
  align-items: left;
  height: 100%;
  width: 100%;
  max-height: 100%;
  max-width: 100%;
  overflow-y: auto;

  input[type="checkbox"] {
    display: none;
  }

  .toggle {
    &:checked + .lbl-toggle::before {
      transform: rotate(90deg) translateX(-3px);
    }

    &:checked + .lbl-toggle + .collapsible-content {
      max-height: 100%;
    }

    &:checked + .lbl-toggle {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
  }

  .lbl-toggle {
    display: block;
    text-transform: uppercase;
    padding: config.$double-padding;
    margin-top: config.$normal-margin;
    color: colors.$text-color;
    background-color: colors.$light-purple;
    background: linear-gradient(
      to left,
      colors.$light-purple,
      colors.$dark-purple
    );
    cursor: pointer;
    border-radius: config.$border-radius;
    transition: all 0.25s ease-out;
  }

  .lbl-toggle:hover {
    color: colors.$sdre-green;
  }

  .lbl-toggle::before {
    content: " ";
    display: inline-block;

    border-top: config.$border-size solid transparent;
    border-bottom: config.$border-size solid transparent;
    border-left: config.$border-size solid currentColor;
    vertical-align: middle;
    margin-right: config.$double-margin;
    transform: translateY(-2px);

    transition: transform 0.2s ease-out;
  }

  .collapsible-content {
    max-height: 0px;
    overflow: hidden;
    transition: max-height 0.25s ease-in-out;
    flex-shrink: 0;

    .content-inner {
      background: colors.$background-color;
      /* FIXME: this should be a gradient that matches the element above */
      @include b.border-inner-content;
      padding: config.$double-padding;

      form {
        input[type="text"].text-black {
          width: 100%;
          padding-left: config.$normal-padding;
        }

        .data-quantity input:read-only,
        .data-quantity select:disabled {
          background: colors.$grey;
        }

        select.text-black {
          width: 100%;
          padding-left: config.$normal-padding;
        }

        .data-quantity {
          position: relative;
          padding: 0;
          margin: 0;
          border: 0;
        }

        .data-quantity legend {
          display: none;
        }

        .data-quantity input,
        .data-quantity select {
          font-size: 18px;
          height: 100%;
          padding: 0rem;
          border-radius: 2rem;
          border: 0;
          background: #fff;
          color: #222;
          box-shadow: 0 10px 65px -10px rgba(0, 0, 0, 0.25);
          text-align: center;
          width: 100%;
          box-sizing: border-box;
        }

        .data-quantity select,
        .data-quantity select option {
          text-transform: capitalize;
        }

        .data-quantity input:focus {
          outline: none;
          box-shadow: 0 5px 55px -10px rgba(0, 0, 0, 0.2), 0 0 4px #3fb0ff; /* Allows border radius on focus */
        }

        .data-quantity input[type=number]::-webkit-inner-spin-button,
        .data-quantity input[type=number]::-webkit-outer-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }

        .data-quantity input[type=number] {
          -moz-appearance: textfield;
          appearance: textfield;
        }

        .data-quantity button {
          position: absolute;
          width: 3.0rem;
          height: 100%;
          top: 0rem;
          display: block;
          padding: 0;
          margin: 0;
          border: 0;
          background: #fff
            url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="50"><path d="M17 25h16M67 25h16M75 17v16" fill="none" stroke="rgb(59,69,66)" stroke-width="1.5px" stroke-linecap="round" stroke-linejoin="round" /></svg>')
            no-repeat 0 0;
          background-position-y: -0.5rem;
          background-size: 5.6rem 2.8rem;
          overflow: hidden;
          white-space: nowrap;
          text-indent: 100%;
          border-radius: 1.4rem;
          cursor: pointer;
          transition: opacity 0.15s;
          opacity: 0.5;
        }

        .data-quantity button:active {
          background-position-y: 1px;
          box-shadow: inset 0 2px 12px -4px #c5d1d9;
        }

        .data-quantity button:focus {
          outline: none;
        }

        .data-quantity button:hover {
          opacity: 1;
        }

        .data-quantity button.sub {
          left: 0.0rem;
        }

        .data-quantity button.add {
          right: 0.6rem;
          background-position-x: -1.8rem;
        }

        .settings-item {
          display: flex;
          flex-direction: row;
          align-items: left;
          height: 100%;
          width: 100%;
          padding-bottom: config.$normal-padding;
          flex-shrink: 0;

          @media (max-width: config.$transition-to-mobile) {
            @include settings_small;
          }

          .live-panel-left > & {
            @include settings_small;
          }

          &.buttons {
            & > *:first-child {
              width: 15.625rem;
            }
          }

          & > *:first-child {
            width: 12.5rem;
          }

          & > *:nth-child(2) {
            width: 100%;
            max-width: 20rem;
          }

          & > *:only-child {
            width: 100%;
          }
        }
      }
    }
  }
}
